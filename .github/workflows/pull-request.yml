name: Pull request

on:
  - pull_request

jobs:
  check-gemfile-lock:
    name: Check Gemfile.lock

    runs-on: ubuntu-latest

    container:
      image: ruby:alpine

    steps:
      - name: Install dependencies
        run: apk add git

      - name: Check out source code
        uses: actions/checkout@v2

      - name: Install Bundler
        run: bin/install-bundler

      - name: Check Gemfile.lock
        run: bin/bundle lock
        env:
          BUNDLE_FROZEN: true

  version-matrix:
    name: Generate version matrix

    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.version-matrix.outputs.matrix }}

    steps:
      - name: Check out source code
        uses: actions/checkout@v2

      - name: Generate version matrix
        id: version-matrix
        run: bin/version-matrix

  test:
    needs: version-matrix

    strategy:
      matrix: ${{ fromJSON(needs.version-matrix.outputs.matrix) }}

    name: Ruby ${{ matrix.ruby }} | PG ${{ matrix.pg }} | ActiveRecord ${{ matrix.activerecord }}

    runs-on: ubuntu-latest

    container:
      image: ruby:${{ matrix.ruby }}-alpine

    env:
      BUNDLE_PATH: ${{ github.workspace }}/vendor/bundle
      ACTIVERECORD_VERSION: ${{ matrix.activerecord }}
      PG_VERSION: ${{ matrix.pg }}

    steps:
      - name: Install dependencies
        run: apk add build-base git postgresql-dev

      - name: Check out source code
        uses: actions/checkout@v2

      - name: Install Bundler
        run: bin/install-bundler

      - name: Update Gemfile.lock
        run: bin/bundle lock --update activerecord pg

      - name: Compute cache key
        id: cache-key
        run: |
          source /etc/os-release
          postgresql_version=$(apk info --installed postgresql-dev --verbose)
          printf \
            "::set-output name=cache-key::alpine-%s-ruby-%s-%s\n" \
            "${VERSION_ID}" \
            "${RUBY_VERSION}" \
            "${postgresql_version}"

      - name: Cache gems
        uses: actions/cache@v2.1.4
        with:
          key: ${{ steps.cache-key.outputs.cache-key }}-gems-${{ hashFiles('Gemfile.lock') }}
          path: vendor/bundle

      - name: Install gems
        run: bin/bundle install
        env:
          BUNDLE_FROZEN: true
          BUNDLE_JOBS: 4
          BUNDLE_RETRY: 3

      - name: Run RuboCop
        run: bin/rake rubocop

      - name: Run unit tests
        run: bin/rake test:unit

      - name: Run acceptance tests
        run: bin/rake test:acceptance
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SECURITY_GROUP_ID: ${{ secrets.SECURITY_GROUP_ID }}
